letters = {
	"/" : "qd",
	"?" : "xa",
	"." : "!%*",
	"," : "el",
	">" : "62",
	"<" : "99",
	"\"" : "x",
	"'" : "xl",
	";" : "555",
	":" : "ff",
	"\\" : "l",
	"|" : "d",
	"]" : "iiii",
	"[" : "^%^",
	"}" : "kgll",
	"{" : "hg$",
	"=" : "#abcd",
	"+" : "@pp",
	"*" : "f",
	"&" : "t",
	"^" : "#",
	"%" : "a",
	"$" : "z",
	"₹" : "hgggg",
	"€" : "^^",
	"£" : "!m!",
	"¥" : "~~",
	"₩" : "%t%%%",
	"₽" : "hhh",
	"#" : "x",
	"@" : "s",
	"!" : "l",
	"~" : "q",
	"_" : "@",
	"-" : "p",
	"(" : "!",
	")" : "`",
	" " : "4",
	"A" : "11",
	"B" : "r4#",
	"C" : "$_@@",
	"D" : "2g1",
	"E" : "7",
	"F" : "1u",
	"G" : "$1",
	"H" : "s",
	"I" : "77",
	"J" : "Q",
	"K" : "33",
	"L" : "221",
	"M" : "Aa",
	"N" : "__",
	"O" : "1",
	"P" : "sss",
	"Q" : "i",
	"R" : "@ghg",
	"S" : "56",
	"T" : "8",
	"U" : "we@!",
	"V" : "zz",
	"W" : "__$*",
	"X" : "t11",
	"Z" : "!??",
	"a" : "hjkl",
	"b" : "vbnh",
	"c" : "1278",
	"d" : "@@Q!jjj",
	"e" : "rr!r",
	"f" : "$k",
	"g" : "__1111",
	"h" : "199999",
	"i" : "23342",
	"j" : "99",
	"k" : "fllk1x",
	"l" : "hme1",
	"m" : "2122",
	"n" : "8055",
	"o" : "(99",
	"p" : ">q",
	"q" : "175552",
	"r" : "~~1l",
	"s" : "$h4",
	"t" : "<i",
	"u" : "553287",
	"v" : "23A",
	"w" : "3422Q",
	"x" : "gl22",
	"z" : ")*1",
	"0" : "gk",
	"1" : "55",
	"2" : "f!!!",
	"3" : ")_5",
	"4" : "rrr!1",
	"5" : "23u",
	"6" : "4k:",
	"7" : "433 _",
	"8" : "h%//",
	"9" : "20%",
#list's somewhat complete, but you can still change these letters and their 
# cipher, and maybe even add yours if I missed any :).
}
split_letters = "0"
lt = list(letters)
nm = [letters[k] for k in letters]

inv_letters = dict(zip(nm, lt))


def splt(word):
	return [l for l in word]


def decipher(num):
	clusters = num.split(split_letters)
	sent = ""
	for u in clusters:
		ltrs = splt(u)
		cluster = ""
		for l in ltrs:
			cluster += inv_letters[l]
		sent += cluster
	return sent

def cipher(txt):
	text = splt(txt)
	sent = ""
	for t in text:
		if t == " ":
			sent += letters[t]
		else:
			sent += letters[t]+split_letters
	return sent

kk = True
print('''


	 ____   _             _            _____             _                      _     _ 
	/ ___| | |__    ___  | |_   ___   |_   _|  ___    __| |  ___   _ __   ___  | | __(_)
	\___ \ | '_ \  / _ \ | __| / _ \    | |   / _ \  / _` | / _ \ | '__| / _ \ | |/ /| |
	 ___) || | | || (_) || |_ | (_) |   | |  | (_) || (_| || (_) || |   | (_) ||   < | |
	|____/ |_| |_| \___/  \__| \___/    |_|   \___/  \__,_| \___/ |_|    \___/ |_|\_\|_|
	                                                                                    

	                #@/@@@#@@@@@@(#@@@@@@%#%@@@@@@@@*****************************************           
	               @@@@#@%@@&@@&@@@@@@@&%%@@@@@@@@@@**,*********************************,*****          
	              @@@@/#@@@%@@@@@@@@@@@#@@@@@@@@@@@/*/***********************************,*****         
	            /@@@&*(@@@@@&@@@@@@@@%&@@@@@@@@@@@/*%*(**********************************,,****,        
	            @@&@##@@@@%@@@@@@@@@(@@@@@@&&@@@@/@@*@*************,*********************,,,****        
	           &@#&##@@@@(@@@@#@@@@#@@@@@@&&@@@@*@@*@(***********************************,.,,****       
	          %@#*@#@@@@(@@@@(@@@@#@@@#@@&&@@@@@@@@@@*,*************,********************,..,,*.**      
	          %#(@##@@(@@@@@(@@@@(@@@%@@@%@@@@@%@@@@@*/*************.,*******************,....*..**.    
	          @/(@#@@#@@@@@#@@@@@@@@#@@@%@&@@@@#@@@%@**************...,*****************,.....,. .,,*,  
	         %, @@&@@#@@@@#@@@@@%(@/@#@#&@/@@@#/@@##@@***,*********,,..,******.******,**.......,        
	         *  @@@@#@@@@#*@@@##&@@%*@/(@%/@@#(#@&*#@@**..******,*,,,/..,**,*..,*****.,,.........       
	            @@@%(@@@@#@@###@&%/@#((#/(*@#*(#&#(#@#**,.***,**,*,,,//..**.,...*****............       
	            &@@((@#@(/%##@@%*(%/((%&%(%@/(/##(((@%@,*.***.,,..,,///*..,.....,,,,,...........        
	           %@*@#@@@@(*(@@##(#@/((&&&&%&&((,*,,*&@/&&*.***.,,..,,,,,*.........,,,.............       
	          @   %/@#@*##@#&*@@@@%%%##/     ,*/(/%@/(*@,.,,,.,,,,,.     .... ....,.............        
	             ,# @*@##/#@@@@#%@%@@@@@,***.@.%*%%/#(/@/..,,,,,#%@.(/#,@,..((....,......... ....       
	             *( &.@##,#&&&@#/@(&&&&&&&&&&&&&&&(&&&((/,.,.,,,,//////*,*..,/.,......,..&..  .         
	              * ,*@#&(((((@#*/#&&&&&&&&&&&&&&&&&&&&%#*,.,/.*//////////.,/*/,....*(/&&               
	                  *##&&#,#(&#(&&&&&&&&&&&&&&&&&&&&&&&&&&.&#//////////////////.(,&&&&                
	                    . #&&*(#&#&&&&&&&&&&&&&&&&&&&&(&&&&&&&&&&&(///////////#&#((&&#                  
	                         */#&&&&&&&&&&&&&&&&&&&&&&*&&&&&&&&&&&&&&///////&&&&#/                      
	                           /&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&/                       
	                            *&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&                         
	                              (&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*                          
	                              /(#&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&(,                           
	                              ,&#*/&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&*,(,,.                         
	                           ,,,. &#*((&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&.*// ..,,,                       
	                       .,,,.    &&*(&((,/&&&&&&&&&&&&&&&&&&&&&&& (/*///    ,.,,,.                   
	                     ,,....     .&#/&&&%((  &&&&&&&&&&&&&&&&*.(////*//      ....,,                  
	                    ,,,.....     &&(&&&&&&(((   .(%&&%#.  ,////////,//   .......,,                  
	                     ,,......... &&&&&&&&&&&&(/.       ,*////////////*.........,,                   
	                     ,,...   ........*&&&&&&&&&&/* ,,*,//////////,............,.                    
	                      ,.....     .......,./&&&&&&&%/,.(((((///..........   ...,                     
	                      ........         ..   &&&&&&&&*&&&&&&&&,..           ....                     
	                     ........               &&&&&&&&&&&&&&&&&,..           ....                     
	                  .,.... .....              &&&&&&&&&&&&&&&&&..           ... ..,                   
	               (@,,.....   ..               &&&&&&&&&&&&&&&&#..           ..   ..,.                 
	           (@@@@*,,....      .              %&&&&&&&&&&&&&&&...           ..  ....,,&(              
	       ***@@@@@@,,.....       ..            &%&&&&&&&&&&&&&&...          .    ... ,,(@@@@%          
	   *@@@**%@@@@@/,,......        .           %%%&&&&&&&&&%%%....               ....,,/@@@@@@**,      


		''')

while kk:
	try:
		st = input("r for decipher, and q for cipher:")
		inp = input("f for a txt file, t for plain text you will enter:")
		if inp == "f":
			pth = input("Please input the path to the file: ")
			try:
				file = open(pth, "r")
				In = file.read()
			except:
				print("Please enter a valid path to a valid file.")

		elif inp == "t":
			In = input("Please enter the text: ")
		else:
			print("Please enter a valid value.")
			break
			kk = False
		if st == "r":
			out = decipher(In)
		elif st == "q":
			out = cipher(In)
		elif st == "e":
			kk = False
		else:
			print("Please enter a valid value for the first statement")
			break
		otpt = input("f for the output as a txt file, t to print it as a plain text: ")
		if otpt == "f":
			pthe = input("Please input the path to the file: ")
			try:
				with open(pthe, "w") as fle:
					fle.write(out)
					fle.close()
				kk = False
			except:
				print("Please enter a valid path to a valid file.")
				kk = False
		elif otpt == "t":
			print(out)
			kk = False
		else:
			print("Please input a valid value.")
			break
	except KeyboardInterrupt:
		print("Exiting...")
		break
	except:
		print("Error... You probably made a mistake :(...")